## This is example of Docker Compose for ReportPortal
## Do not forget to configure data volumes for production usage

## Execute 'docker-compose -p reportportal up -d --force-recreate'
## to start all containers in daemon mode
## Where:
##      '-p reportportal' -- specifies container's prefix (project name)
##      '-d' -- enables daemon mode
##      '--force-recreate' -- forces re-recreating of all containers

version: '2'

## Create separate volume for Redis and MongoDB data
## See https://docs.docker.com/compose/compose-file/#/volume-configuration-reference
#volumes:
#  reportportal-data:
#    # external: true

services:
  redis:
    image: redis:3.2
    ## Uncomment if needed
    # ports:
    #   - "6379:6379"
    volumes:
      - ./data/redis:/data
    restart: always

  mongodb:
    image: mongo:3.4
    ports:
        - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
    restart: always

  registry:
    image: consul:0.9.0
    volumes:
      - ./data/consul:/consul/data
    ports:
        - "8500:8500"
        - "8300:8300"
        - "53:8600/udp"
    command: "agent -server -bootstrap-expect=1 -ui -client 0.0.0.0  -raft-protocol=3"
    environment:
        - 'CONSUL_LOCAL_CONFIG={"leave_on_terminate": true}'
    restart: always


  uat:
    image: reportportal/service-authorization:3.1.0-BETA-1
    #ports:
    #  - "9999:9999"
    depends_on:
      - redis
      - mongodb
    environment:
      - RP_PROFILES=docker,6293
      - RP_SESSION_LIVE=3600 #in seconds
    restart: always

  gateway:
    image: fabiolb/fabio:1.5.2-go1.8.3
    ports:
      - "9998:9998" # GUI/management
      - "8080:9999" # HTTP exposed
    environment:
      - FABIO_REGISTRY_CONSUL_ADDR=registry:8500
      - FABIO_REGISTRY_CONSUL_REGISTER_NAME=gateway
      - FABIO_PROXY_ADDR=:9999;rt=300s;wt=300s

  index:
    image: reportportal/service-index:3.1.0
    environment:
      - RP_SERVER.PORT=8080
      - RP_CONSUL.TAGS=urlprefix-/
      - RP_CONSUL.ADDRESS=registry:8500
    depends_on:
       - registry
       - gateway
    restart: always

  api:
    image: reportportal/service-api:3.1.0-BETA-2
    depends_on:
      - redis
      - mongodb
    environment:
      - RP_PROFILES=docker
      - RP_ISSUE_ANALYZER_DEPTH=4
      - JAVA_OPTS=-Xmx1g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp  -Dcom.sun.management.jmxremote.rmi.port=12349 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.local.only=false  -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.6.128.241
    ports:
      - "9010:9010"
      - "12349:12349"
    restart: always

  ui:
    image: reportportal/service-ui:3.1.0
    environment:
      - RP_SERVER.PORT=8080
      - RP_CONSUL.TAGS=urlprefix-/ui opts strip=/ui
      - RP_CONSUL.ADDRESS=registry:8500
    restart: always

  jira:
    image: reportportal/service-jira:3.1.0-BETA-1
    environment:
      - RP_PROFILES=docker
    restart: always

  rally:
    image: reportportal/service-rally:3.1.0-BETA-1
    environment:
      - RP_PROFILES=docker
    restart: always
